apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cluster-health-console
  name: cluster-health-console
  namespace: cluster-health-analyzer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cluster-health-console
  template:
    metadata:
      labels:
        app: cluster-health-console
    spec:
      serviceAccountName: cluster-health-analyzer-console
      automountServiceAccountToken: true
      containers:
      - name: oauth-proxy
        image: registry.redhat.io/openshift4/ose-oauth-proxy
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8051
          name: public
        args:
        - '--https-address='
        - '--http-address=:8051'
        - '--provider=openshift'
        - '--openshift-service-account=cluster-health-analyzer-console'
        - '--upstream=http://localhost:8050'
        - '--cookie-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token'
        - '--openshift-sar={"resourceAPIGroup":"monitoring.coreos.com", "resource": "prometheuses/api", "resourceName": "k8s", "verb": "get"}'
        - '--scope=user:info user:check-access'
      - name: cluster-health-console
        image: "quay.io/openshiftanalytics/cluster-health-console-prototype:dev-preview"
        imagePullPolicy: Always
        env:
          - name: PROM_URL
            value: "https://thanos-querier.openshift-monitoring.svc.cluster.local:9091"
          - name: PROM_ACCESS_TOKEN_FILE
            value: "/var/run/secrets/kubernetes.io/serviceaccount/token"
          - name: SSL_VERIFY
            value: "/var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt"
        ports:
        - containerPort: 8050
          name: http
        securityContext:
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
          seccompProfile:
            type: RuntimeDefault
